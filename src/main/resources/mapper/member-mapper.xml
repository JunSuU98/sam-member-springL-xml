<?xml version="1.0" encoding="UTF-8"?>

<!--https://mybatis.org/dtd/mybatis-3-mapper.dtd가 다운로드되지 않으면 <a> 태그로 다운해서 로컬로 등록한다.-->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "/Users/haru/schema/mybatis-3-mapper.dtd">
<!-- 네임스페이스의 충돌을 방지하기 위해 설정한다.-->
<mapper namespace="su.spring.member">

	<!--전체 컬럼값을 조회하고 결과 저장은 MemberDTO 클래스로 설정한다.-->
	<select id="selectAll" resultType="MemberDTO"> 
		select * from member
	</select>

	<!--개별 컬럼값을 조회하고 조회할 파라미터와 결과 저장은 MemberDTO 클래스로 설정한다.-->
	
	<select id="select" parameterType="MemberDTO" resultType="MemberDTO"> 
		select * from member where member_number = #{member_number}
	</select>

	<!--컬럼값을 입력하고 입력할 파라미터는 MemberDTO 클래스로 설정한다.-->
	
	<insert id="insert" parameterType="MemberDTO"> 
	
		<selectKey keyProperty="member_number" resultType="int" order="BEFORE">
			select number_seq.NEXTVAL from dual
		</selectKey>
	
		insert into member (member_number, member_status, member_rate, member_id, member_password, member_name, member_email, member_phone, member_address, member_birth, member_create, member_update)
		values (#{member_number}, 'active', 0, #{member_id}, #{member_password}, #{member_name}, #{member_email}, #{member_phone}, #{member_address}, TO_DATE(#{member_birth}, 'YYYY-MM-DD'), TO_DATE(#{member_create}, 'YYYY-MM-DD'), TO_DATE(#{member_create}, 'YYYY-MM-DD') )
	</insert>

	<!--컬럼값을 수정하고 수정할 파라미터는 MemberDTO 클래스로 설정한다.-->
	
	<update id="update" parameterType="MemberDTO"> 
		
		update member set member_id = #{member_id}, member_password = #{member_password}, member_name = #{member_name}, member_email = #{member_email}, 
		member_phone = #{member_phone}, member_address = #{member_address}, member_birth = TO_DATE(#{member_birth}, 'YYYY-MM-DD'), member_update = TO_DATE(#{member_update}, 'YYYY-MM-DD') 
		where member_number = #{member_number} 
		
	</update>

	<!--컬럼값을 삭제하고 삭제할 파라미터는 MemberDTO 클래스로 설정한다.-->
	<delete id="delete" parameterType="MemberDTO"> 
		delete from member 
		where member_number = #{member_number}
	</delete> 
	
	
</mapper>